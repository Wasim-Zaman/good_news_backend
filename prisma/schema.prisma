// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Admin {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Category {
  id          String   @id @default(uuid())
  image       String?  
  mainCategory String? 
  name        String
}

model Blog {
  id             String   @id @default(uuid())
  image          String?  
  title          String
  visibility     String?  
  views          Int      @default(0)
  publishDateTime DateTime
  lastModified   DateTime @updatedAt
  status         Int      @default(1)
  type           String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

model Ad {
  id        String   @id @default(uuid())
  media     String
  title     String
  timestamp String
  frequency Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("ads")
}

model News {
  id        String   @id @default(uuid())
  image     String  
  title     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model LiveNews {
  id        String   @id @default(uuid())
  media     String
  name      String
  uri       String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Rss {
  id        String   @id @default(uuid())
  category  String
  language  String
  name      String
  url       String
  image     String?  // Optional field for image URL or path
  title     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model EPaper {
  id        String   @id @default(uuid())
  media     String
  name      String
  pdf       String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model SearchLog {
  id          String   @id @default(uuid()) // UUID as the unique identifier
  searchLog   String   // The search term logged
  count       Int      // Number of times the term was searched
  searchDate  DateTime // The date and time when the search was logged

  createdAt   DateTime @default(now()) // Timestamp of creation
  updatedAt   DateTime @updatedAt // Timestamp of the last update
}

